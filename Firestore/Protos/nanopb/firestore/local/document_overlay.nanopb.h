/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.8 */

#ifndef PB_FIRESTORE_CLIENT_DOCUMENT_OVERLAY_NANOPB_H_INCLUDED
#define PB_FIRESTORE_CLIENT_DOCUMENT_OVERLAY_NANOPB_H_INCLUDED
#include <pb.h>

#include "google/firestore/v1/write.nanopb.h"

#include "google/protobuf/timestamp.nanopb.h"

#include <string>

namespace firebase {
namespace firestore {

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif


/* Struct definitions */
typedef struct _firestore_client_DocumentOverlay {
    int32_t largest_batch_id;
    google_firestore_v1_Write overlay_mutation;

    std::string ToString(int indent = 0) const;
/* @@protoc_insertion_point(struct:firestore_client_DocumentOverlay) */
} firestore_client_DocumentOverlay;

/* Default values for struct fields */

/* Initializer values for message structs */
#define firestore_client_DocumentOverlay_init_default {0, google_firestore_v1_Write_init_default}
#define firestore_client_DocumentOverlay_init_zero {0, google_firestore_v1_Write_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define firestore_client_DocumentOverlay_largest_batch_id_tag 1
#define firestore_client_DocumentOverlay_overlay_mutation_tag 2

/* Struct field encoding specification for nanopb */
extern const pb_field_t firestore_client_DocumentOverlay_fields[3];

/* Maximum encoded size of messages (where known) */
#define firestore_client_DocumentOverlay_size    (17 + google_firestore_v1_Write_size)

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define DOCUMENT_OVERLAY_MESSAGES \


#endif

}  // namespace firestore
}  // namespace firebase

/* @@protoc_insertion_point(eof) */

#endif
